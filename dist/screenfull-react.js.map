{"version":3,"file":"screenfull-react.js","sources":["../node_modules/screenfull/dist/screenfull.js","../src/index.js"],"sourcesContent":["/*!\n* screenfull\n* v3.3.2 - 2017-10-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport screenfull from 'screenfull';\n\n/**\n * The underlying scrollContainerRef should be an actual node, not a Fragment. Otherwise, it will just be null\n * You HAVE to make sure overflow-x is not set on the scrollContainerRef or body. This will make scrollTop default to 0 on Chrome Mobile\n */\nexport default class Screenfull extends React.PureComponent {\n  static propTypes = {\n    scrollContainerRef: PropTypes.element,\n    forceFullScreen: PropTypes.bool,\n    mobileOnly: PropTypes.bool,\n    maxPixelsForMobile: PropTypes.number\n  };\n\n  static defaultProps = {\n    scrollContainerRef: null,\n    forceFullScreen: false,\n    mobileOnly: true,\n    maxPixelsForMobile: 768\n  };\n\n  constructor(props) {\n    super(props);\n    this.scroll = 0;\n  }\n\n  componentDidMount() {\n    const { forceFullScreen, mobileOnly } = this.props;\n    if (mobileOnly && !this.isMobile()) return;\n    if (forceFullScreen) {\n      if (screenfull.enabled) screenfull.request(this.getFullScreenNode());\n      return;\n    }\n\n    const node = this.getNode();\n    if (node && screenfull.enabled) {\n      node.addEventListener('scroll', this.handleScroll, { passive: true }, true);\n    }\n  }\n\n  componentWillUnmount() {\n    const { forceFullScreen, mobileOnly } = this.props;\n    if (mobileOnly && !this.isMobile()) return;\n    if (screenfull.enabled) screenfull.exit();\n    if (forceFullScreen) {\n      return;\n    }\n    const node = this.getNode();\n    if (node && screenfull.enabled) {\n      node.removeEventListener('scroll', this.handleScroll);\n    }\n  }\n\n  getNode = () => {\n    const { scrollContainerRef } = this.props;\n    return scrollContainerRef\n      ? ReactDOM.findDOMNode(scrollContainerRef) // eslint-disable-line react/no-find-dom-node\n      : typeof document !== 'undefined' && document.body;\n  };\n\n  getFullScreenNode = () => document.documentElement || document.body;\n\n  isMobile() {\n    const { maxPixelsForMobile } = this.props;\n    if (typeof window === 'undefined') return false;\n    const width = window.innerWidth;\n    return width <= maxPixelsForMobile;\n  }\n\n  handleScroll = event => {\n    const scrollPos = event.currentTarget.scrollTop;\n    let going = 'down';\n    if (this.scroll !== 0 && scrollPos < this.scroll) going = 'up';\n\n    this.scroll = scrollPos;\n\n    if (going === 'up' && screenfull.isFullscreen) {\n      screenfull.exit();\n    } else if (going === 'down' && !screenfull.isFullscreen) {\n      screenfull.request(this.getFullScreenNode());\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n"],"names":["document","isCommonjs","keyboardAllowed","fn","eventNameMap","screenfull","window","module","exports","Element","val","fnMap","i","l","length","ret","change","fullscreenchange","error","fullscreenerror","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","this","isFullscreen","onchange","callback","on","onerror","event","eventName","addEventListener","off","removeEventListener","raw","Object","defineProperties","get","Boolean","fullscreenElement","element","enumerable","enabled","fullscreenEnabled","Screenfull","props","getNode","scrollContainerRef","_this","ReactDOM","findDOMNode","body","getFullScreenNode","handleScroll","scrollPos","currentTarget","scrollTop","going","scroll","forceFullScreen","mobileOnly","isMobile","node","passive","maxPixelsForMobile","innerWidth","React","PureComponent","defaultProps","propTypes"],"mappings":"yYAKA,IAGKA,EACAC,EACAC,EAEAC,EAmEAC,EAKAC,EA5EAL,EAA6B,oBAAXM,aAAqD,IAApBA,OAAON,SAA2BM,OAAON,YAC5FC,EAA8CM,EAAOC,QACrDN,EAAqC,oBAAZO,SAA2B,yBAA0BA,QAE9EN,EAAK,WAsDR,IArDA,IAAIO,EAEAC,IAEF,oBACA,iBACA,oBACA,oBACA,mBACA,oBAIA,0BACA,uBACA,0BACA,0BACA,yBACA,0BAKA,0BACA,yBACA,iCACA,yBACA,yBACA,0BAIA,uBACA,sBACA,uBACA,uBACA,sBACA,uBAGA,sBACA,mBACA,sBACA,sBACA,qBACA,sBAIEC,EAAI,EACJC,EAAIF,EAAMG,OACVC,KAEGH,EAAIC,EAAGD,IAEb,IADAF,EAAMC,EAAMC,KACDF,EAAI,KAAMV,EAAU,CAC9B,IAAKY,EAAI,EAAGA,EAAIF,EAAII,OAAQF,IAC3BG,EAAIJ,EAAM,GAAGC,IAAMF,EAAIE,GAExB,OAAOG,EAIT,OAAO,EAhEC,GAmELX,GACHY,OAAQb,EAAGc,iBACXC,MAAOf,EAAGgB,iBAGPd,GACHe,QAAS,SAAUC,GAClB,IAAID,EAAUjB,EAAGmB,kBAEjBD,EAAOA,GAAQrB,EAASuB,gBAMpB,oCAAoCC,KAAKC,UAAUC,WACtDL,EAAKD,KAELC,EAAKD,GAASlB,GAAmBO,QAAQkB,uBAG3CC,KAAM,WACL5B,EAASG,EAAG0B,mBAEbC,OAAQ,SAAUT,GACbU,KAAKC,aACRD,KAAKH,OAELG,KAAKX,QAAQC,IAGfY,SAAU,SAAUC,GACnBH,KAAKI,GAAG,SAAUD,IAEnBE,QAAS,SAAUF,GAClBH,KAAKI,GAAG,QAASD,IAElBC,GAAI,SAAUE,EAAOH,GACpB,IAAII,EAAYlC,EAAaiC,GACzBC,GACHtC,EAASuC,iBAAiBD,EAAWJ,GAAU,IAGjDM,IAAK,SAAUH,EAAOH,GACrB,IAAII,EAAYlC,EAAaiC,GACzBC,GACHtC,EAASyC,oBAAoBH,EAAWJ,GAAU,IAGpDQ,IAAKvC,GAGDA,GAULwC,OAAOC,iBAAiBvC,GACvB2B,cACCa,IAAK,WACJ,OAAOC,QAAQ9C,EAASG,EAAG4C,sBAG7BC,SACCC,YAAY,EACZJ,IAAK,WACJ,OAAO7C,EAASG,EAAG4C,qBAGrBG,SACCD,YAAY,EACZJ,IAAK,WAEJ,OAAOC,QAAQ9C,EAASG,EAAGgD,wBAK1BlD,EACHM,UAAiBF,EAEjBC,OAAOD,WAAaA,GAjChBJ,EACHM,WAAiB,EAEjBD,OAAOD,YAAa,82BC9HF+C,kCAePC,iHACJA,aA+BRC,QAAU,eACAC,EAAuBC,EAAKH,MAA5BE,0BACDA,EACHE,SAASC,YAAYH,GACD,oBAAbvD,UAA4BA,SAAS2D,QAGlDC,kBAAoB,kBAAM5D,SAASuB,iBAAmBvB,SAAS2D,QAS/DE,aAAe,gBACPC,EAAYzB,EAAM0B,cAAcC,UAClCC,EAAQ,OACQ,IAAhBT,EAAKU,QAAgBJ,EAAYN,EAAKU,SAAQD,EAAQ,QAErDC,OAASJ,EAEA,OAAVG,GAAkB5D,WAAW2B,wBACpBJ,OACQ,SAAVqC,GAAqB5D,WAAW2B,yBAC9BZ,QAAQoC,EAAKI,wBAxDrBM,OAAS,wFAI0BnC,KAAKsB,MAArCc,IAAAA,sBAAiBC,YACNrC,KAAKsC,cACpBF,EACE9D,WAAW6C,SAAS7C,WAAWe,QAAQW,KAAK6B,8BAI5CU,EAAOvC,KAAKuB,UACdgB,GAAQjE,WAAW6C,WAChBX,iBAAiB,SAAUR,KAAK8B,cAAgBU,SAAS,IAAQ,yDAKhCxC,KAAKsB,MAArCc,IAAAA,uBAAiBC,YACNrC,KAAKsC,cACpBhE,WAAW6C,SAAS7C,WAAWuB,QAC/BuC,QAGEG,EAAOvC,KAAKuB,UACdgB,GAAQjE,WAAW6C,WAChBT,oBAAoB,SAAUV,KAAK8B,sDAclCW,EAAuBzC,KAAKsB,MAA5BmB,yBACc,oBAAXlE,QACGA,OAAOmE,YACLD,0CAkBT,YA9E6BE,MAAMC,eAAzBvB,WAQZwB,iCACe,sBACH,cACL,qBACQ,gBAXfC"}